package project;

import java.awt.*;
import java.awt.event.*;
import java.io.IOException;
import java.util.*;
import java.io.*;

import javax.swing.*;


public class ATM extends JFrame {
	
	    
	    
	private JFrame mainFrame;
	private JLabel headerLabel;
	private JLabel statusLabel;
	private JPanel firstPanel;
	private JPanel secondPanel;

	public ATM(){
		prepareGUI();
	}

	private void prepareGUI() {
		mainFrame = new JFrame("Java SWING Examples");
		mainFrame.setSize(400, 400);
		mainFrame.setLayout(new GridLayout(3, 1));
		
		headerLabel = new JLabel("", JLabel.CENTER);
		statusLabel = new JLabel("", JLabel.CENTER);
		statusLabel.setSize(350, 100);
		mainFrame.addWindowListener(new WindowAdapter() {

			public void windowClosing(WindowEvent windowEvent) {

				System.exit(0);

			}});

	

		/*firstPanel = new JPanel();
		firstPanel.setLayout(new FlowLayout());
		mainFrame2.add(headerLabel);
		mainFrame2.add(firstPanel);
		mainFrame2.add(statusLabel);
		mainFrame2.setVisible(true);*/

		firstPanel = new JPanel();
		firstPanel.setLayout(new FlowLayout());
		secondPanel = new JPanel();
		secondPanel.setLayout(new FlowLayout());
		mainFrame.add(headerLabel);
		mainFrame.add(firstPanel);
		mainFrame.add(statusLabel);
		mainFrame.add(secondPanel);
		//mainFrame.setVisible(true);
	}


	private void showEvent() {
		headerLabel.setText("Choose Service");
		
		JButton withdrawButton = new JButton("Withdraw");
		JButton balanceButton = new JButton("Display Balance");
		JButton cancelButton = new JButton("Cancel");
		JButton pTen = new JButton("£10");
		JButton pTwenty = new JButton("£20");
		JButton pThirty = new JButton("£30");
		JButton pFourty = new JButton("£40");
		JButton pFifty = new JButton("£50");
		JButton pSixty = new JButton("£60");
		JButton pSeventy = new JButton("£70");
		JButton pEighty = new JButton("£80");
		JButton pNinety = new JButton("£90");
		JButton pHundred = new JButton("£100");
		JButton p2Hundred = new JButton("£200");
		
		withdrawButton.setActionCommand("Withdraw");
		balanceButton.setActionCommand("Balance");
		cancelButton.setActionCommand("Cancel");	
		pTen.setActionCommand("£10");
		pTen.setActionCommand("£20");
		pTen.setActionCommand("£30");
		pTen.setActionCommand("£40");
		pTen.setActionCommand("£50");
		pTen.setActionCommand("£60");
		pTen.setActionCommand("£70");
		pTen.setActionCommand("£80");
		pTen.setActionCommand("£90");
		pTen.setActionCommand("£100");
		pTen.setActionCommand("£200");
		
		withdrawButton.addActionListener(new BCL());
		balanceButton.addActionListener(new BCL());
		cancelButton.addActionListener(new BCL());
		pTen.addActionListener(new BCL());
		pTwenty.addActionListener(new BCL());
		pThirty.addActionListener(new BCL());
		pFourty.addActionListener(new BCL());
		pFifty.addActionListener(new BCL());
		pSixty.addActionListener(new BCL());
		pSeventy.addActionListener(new BCL());
		pEighty.addActionListener(new BCL());
		pNinety.addActionListener(new BCL());
		pHundred.addActionListener(new BCL());
		p2Hundred.addActionListener(new BCL());
		firstPanel.add(withdrawButton);
		firstPanel.add(balanceButton);
		firstPanel.add(cancelButton);
		secondPanel.add(pTen);
		secondPanel.add(pTwenty);
		secondPanel.add(pThirty);
		secondPanel.add(pFourty);
		secondPanel.add(pFifty);
		secondPanel.add(pSixty);
		secondPanel.add(pSeventy);
		secondPanel.add(pEighty);
		secondPanel.add(pNinety);
		secondPanel.add(pHundred);
		secondPanel.add(p2Hundred);
		mainFrame.remove(secondPanel);
		mainFrame.setVisible(true);				
	}
	
	private void showWithdraw() {
		headerLabel.setText("Withdraw Service");	
		JButton fiveP = new JButton("fiveP");
	}

	private class BCL implements ActionListener {
		@Override 
		public void actionPerformed(ActionEvent ae) {
			String command = ae.getActionCommand();
			switch (command) {
			case "Withdraw": statusLabel.setText("Select Amount");		      
			//mainFrame.setVisible(false);
			mainFrame.remove(firstPanel);
			mainFrame.add(secondPanel);
			ATM sD = new ATM();
			sD.showWithdraw();
			//Address A = new Address();
			//A.withdraw();
			break;
			case "Balance":
				Address A = new Address();
				 float temp = float.parseFloat(A.readFromFile());
				statusLabel.setText("£"+temp);
				break;
			case "Cancel": 
				statusLabel.setText("Cancel not possible");
				break;
			case "HaveFun": 
				statusLabel.setText("Having Fun");
				break;
			}
		}
	}
	



	public static void main(String[] args){
		ATM sD = new ATM();
		sD.showEvent();
		try{
			Address A = new Address();
			float test = Address.balance;
			A.writeToFile(test);
			A.readFromFile();
		}
		catch (Exception  e) {
			// TODO: handle exception
		}		
	}
}
